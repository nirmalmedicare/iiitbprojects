mnsit_train<- read.csv("mnist_train.csv",header = FALSE)
setwd("C:/Users/Priy/Desktop/IIITB/Modelling/SVM")
mnsit_train<- read.csv("mnist_train.csv",header = FALSE)
View(mnsit_train)
mnist_test<-read.csv("mnist_test.csv",header = FALSE)
View(mnist_test)
colnames(mnsit_train)[1]<-c("label")
colnames(mnist_test)[1]<-c("label")
sapply(mnsit_train, function(x) sum(is.na(x)))
sapply(mnsit_train, function(x) quantile(x,seq(0,1,0.01)))
View(mnsit_train)
quantile(mnsit_train$label,seq(0,1,0.01))
quantile(mnsit_train$V1,seq(0,1,0.01))
quantile(mnsit_train$V2,seq(0,1,0.01))
quantile(mnsit_train$V785,seq(0,1,0.01))
ggplot(mnsit_train,aes(x=as.factor(label),fill=label))+
geom_bar(stat="count",color="white")+
scale_fill_gradient(low="lightblue",high="pink",guide=FALSE)+
labs(title="Digits in Train Data",x="Digits")
library(gridExtra)
library(readr)
library(dplyr)
library(e1071)
library(caret)
library(kernlab)
library(ggplot2)
mnsit_train<- read.csv("mnist_train.csv",header = FALSE)
str(mnsit_train)
mnist_test<-read.csv("mnist_test.csv",header = FALSE)
colnames(mnsit_train)[1]<-c("label")
colnames(mnist_test)[1]<-c("label")
sapply(mnsit_train, function(x) sum(is.na(x)))
ggplot(mnsit_train,aes(x=as.factor(label),fill=label))+
geom_bar(stat="count",color="white")+
scale_fill_gradient(low="lightblue",high="pink",guide=FALSE)+
labs(title="Digits in Train Data",x="Digits")
ggplot(mnsit_train,aes(x=as.factor(label),fill=label))+
geom_bar(stat="count",color="white")+
labs(title="Digits",x="Digits")
ggplot(mnsit_train,aes(x=as.factor(label),fill=label))+
geom_bar(stat="count")+
labs(title="Digits",x="Digits")
sample <- sample(1:nrow(train),50)
sample <- sample(1:nrow(mnsit_train),50)
var <- t(mnsit_train[sample,-1])
var_matrix <- lapply(1:50,function(x) matrix(var[,x],ncol=28))
opar <- par(no.readonly = T)
par(mfrow=c(5,10),mar=c(.1,.1,.1,.1))
for(i in 1:50) {
for(j in 1:28) {
var_matrix[[i]][j,] <- rev(var_matrix[[i]][j,])
}
image(var_matrix[[i]],col=grey.colors(225),axes=F)
}
nearzv<- nearZeroVar(mnsit_train,saveMetrics = TRUE)
range(nearzv$percentUnique)
head(nearzv)
nearzv<- nearZeroVar(mnsit_train[,-1],saveMetrics = TRUE)
mnsit_train_nzv <- mnsit_train[c(rownames(nzv[nzv$percentUnique > 0.1,])) ]
print(length(nearzv[nearzv$zeroVar==T,]))
head(nearzv)
nearzv[nearzv$zeroVar==T,]
print(sum(nearzv[nearzv$zeroVar==T,]))
print(length(nearzv[nearzv$zeroVar== TRUE,]))
sum(nearzv$zeroVar)
sum(nearzv$nzv)
removeCols <- rownames(nearzv[nearzv$nzv==TRUE,])
variation <- setdiff(names(mnsit_train),cutvar)
variation <- setdiff(names(mnsit_train),removeCols)
train <- train[,variation]
mnsit_train <- mnsit_train[,variation]
mnsit_train<- read.csv("mnist_train.csv",header = FALSE)
mnist_test<-read.csv("mnist_test.csv",header = FALSE)
colnames(mnsit_train)[1]<-c("label")
colnames(mnist_test)[1]<-c("label")
sapply(mnsit_train, function(x) sum(is.na(x)))
nearzv<- nearZeroVar(mnsit_train[,-1],saveMetrics = TRUE)
head(nearzv)
range(nearzv$percentUnique)
print(length(nearzv[nearzv$zeroVar== TRUE,]))
sum(nearzv$zeroVar)
sum(nearzv$nzv)
removeCols <- rownames(nearzv[nearzv$nzv==TRUE,])
variation <- setdiff(names(mnsit_train),removeCols)
mnsit_train_nzv <- mnsit_train[,variation]
mnsit_train_nzv<-
label <- as.factor(mnsit_train_nzv[[1]])
label
mnsit_train_nzv$label <- NULL
mnsit_train<- read.csv("mnist_train.csv",header = FALSE)
str(mnsit_train)
mnist_test<-read.csv("mnist_test.csv",header = FALSE)
colnames(mnsit_train)[1]<-c("label")
colnames(mnist_test)[1]<-c("label")
nearzv<- nearZeroVar(mnsit_train[,-1],saveMetrics = TRUE)
removeCols <- rownames(nearzv[nearzv$nzv==TRUE,])
variation <- setdiff(names(mnsit_train),removeCols)
mnsit_train_nzv <- mnsit_train[,variation]
label <- as.factor(mnsit_train_nzv[[1]])
mnsit_train_nzv$label <- NULL
mnsit_train_nzv<-scale(mnsit_train_nzv)
View(mnsit_train_nzv)
princtrain<-prcomp(mnsit_train_nzv)
princtrain
covtrain <- cov(train)
varex <- princtrain$sdev^2/sum(princtrain$sdev^2)
varcum <- cumsum(varex)
result <- data.frame(num=1:length(princtrain$sdev),
ex=varex,
cum=varcum)
plot(result$num,result$cum,type="b",xlim=c(0,100),
main="Variance Explained by Top 100 Components",
xlab="Number of Components",ylab="Variance Explained")
mnsit_train<- read.csv("mnist_train.csv",header = FALSE)
mnist_test<-read.csv("mnist_test.csv",header = FALSE)
colnames(mnsit_train)[1]<-c("label")
colnames(mnist_test)[1]<-c("label")
nearzv<- nearZeroVar(mnsit_train[,-1],saveMetrics = TRUE)
removeCols <- rownames(nearzv[nearzv$nzv==TRUE,])
variation <- setdiff(names(mnsit_train),removeCols)
mnsit_train_nzv <- mnsit_train[,variation]
label <- as.factor(mnsit_train_nzv[[1]])
mnsit_train_nzv$label <- NULL
mnsit_train_nzv <- mnsit_train_nzv/255
covmnsit_train_nzv <- cov(mnsit_train_nzv)
View(covmnsit_train_nzv)
princtrain <- prcomp(covmnsit_train_nzv)
varex <- princtrain$sdev^2/sum(princtrain$sdev^2)
varcum <- cumsum(varex)
result <- data.frame(num=1:length(princtrain$sdev),
ex=varex,
cum=varcum)
plot(result$num,result$cum,type="b",xlim=c(0,100),
main="Variance Explained by Top 100 Components",
xlab="Number of Components",ylab="Variance Explained")
plot(result$num,result$cum,type="b",xlim=c(0,100),
main="Variance Explained by Top 100 Components",
xlab="Number of Components",ylab="Variance Explained")
result
abline(v=100,lty=2)
plot(result$num,result$cum,type="b",xlim=c(0,100),
main="Variance Explained by Top 100 Components",
xlab="Number of Components",ylab="Variance Explained")
abline(v=100,lty=2)
plot(result$num,result$cum,type="b",xlim=c(0,100),
main="Variance Explained by Top 100 Components",
xlab="Number of Components",ylab="Variance Explained")
princtrain
mnsit_train_nzv_score <- as.matrix(mnsit_train_nzv) %*% princtrain$rotation[,1:25]
mnsit_train_nzv <- cbind(label,as.data.frame(train_score))
mnsit_train_nzv <- cbind(label,as.data.frame(mnsit_train_nzv_score))
colors <- rainbow(length(unique(train$label)))
colors <- rainbow(length(unique(mnsit_train_nzv$label)))
names(colors) <- unique(mnsit_train_nzv$label)
plot(mnsit_train_nzv$PC1,mnsit_train_nzv$PC2,type="n",main="First Two Principal Components")
text(mnsit_train_nzv$PC1,mnsit_train_nzv$PC2,label=mnsit_train_nzv$label,col=colors[mnsit_train_nzv$label])
svm_mdl <- train(label~.,data=mnsit_train_nzv,
method="svmRadial",
trControl=trainControl(method="cv",
number=5),
tuneGrid=data.frame(sigma = 0.01104614,
C = 3.5))
svm_mdl
mnist_test_non_linear<- predict(svm_mdl, mnist_test)
svm_mdl
mnist_test <- mnist_test[,var[-1]]/255
mnist_test <- as.matrix(mnist_test) %*% princtrain$rotation[,1:25]
View(mnist_test)
mnist_test<-read.csv("mnist_test.csv",header = FALSE)
mnist_test <- mnist_test[,variation[-1]]/255
mnist_test <- as.matrix(mnist_test) %*% princtrain$rotation[,1:25]
mnist_test <- as.data.frame(mnist_test)
pred <- predict(svm_mdl$finalModel,mnist_test,type="response")
prediction <- data.frame(ImageId=1:nrow(test),Label=pred)
prediction <- data.frame(ImageId=1:nrow(mnist_test),Label=pred)
prediction
mnist_test_non_linear<- predict(svm_mdl, mnist_test)
mnist_test<-read.csv("mnist_test.csv",header = FALSE)
label <- as.factor(mnist_test[[1]])
mnist_test <- mnist_test[,variation[-1]]/255
mnist_test <- as.matrix(mnist_test) %*% princtrain$rotation[,1:25]
mnist_test <- as.data.frame(mnist_test)
mnist_test <- cbind(label,as.data.frame(mnist_test))
mnist_test_non_linear<- predict(svm_mdl, mnist_test[,-1])
confusionMatrix(mnist_test_non_linear, mnist_test$label)
?par
